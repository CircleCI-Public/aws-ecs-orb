description: >-
  Registers a task definition based on the last task definition, except with the
  Docker image/tag names and environment variables of the containers updated
  according to this command's parameters.
parameters:
  family:
    description: Name of the task definition's family.
    type: string
  container_image_name_updates:
    description: >
      Use this to update the Docker image names and/or tag names of existing containers that had been defined in the previous task definition.

      Expected format:
      container=<container-name>,image-and-tag=<image-name>:<tag-name>|image=<image-name>|tag=<tag-name>,container=...,image-and-tag|image|tag=...,

      For each container, specify only either "image-and-tag" or "image" or "tag".

      If "image-and-tag" is specified, the container image will be updated to the value of the name-value pair.
      If "image" is specified, the image tag defined in the previous task definition will be retained, if exists.
      If "tag" is specified, the image name defined in the previous task definition will be used.
    type: string
    default: ''
  container_env_var_updates:
    description: >
      Use this to update or set the values of environment variables that will be defined for the containers.

      (Existing environment variables not included in this parameter will not be removed)

      Expected format:
      container=<container-name>,name=<env-var-name>,value=<env-var-value>,container=...,name=...,value=...,

      Values should not contain commas.
    type: string
    default: ''
  container_secret_updates:
    description: >
      Use this to update or set the values of secrets variables that will be
      defined for the containers.
      (Existing secrets variables not included in this parameter will not be
      removed)

      Expected format:
      container=<container-name>,name=<env-var-name>,valueFrom=<env-var-value>,container=...,name=...,valueFrom=...,

      Values should not contain commas.
    type: string
    default: ''
  container_docker_label_updates:
    description: >
      Use this to update or set the values of docker label variables that will be defined for the containers.
      (Existing secrets variables not included in this parameter will not be removed)

      Expected format:
      container=<container-name>,<key>=<env-var-name>,<key>=<env-var-value>,container=...,<key>=...,<key>=...,

      Values should not contain commas.
    type: string
    default: ''
  profile_name:
    description: AWS profile name to be configured.
    type: string
    default: "default"
  previous_revision_number:
    description: Optional previous task's revision number
    type: string
    default: ''
steps:
  - run:
      name: Retrieve previous task definition and prepare new task definition values
      command: <<include(scripts/get_prev_task.sh)>>
      environment:
        ORB_STR_FAMILY: <<parameters.family>>
        ORB_STR_CONTAINER_IMAGE_NAME_UPDATES: <<parameters.container_image_name_updates>>
        ORB_STR_CONTAINER_ENV_VAR_UPDATE: <<parameters.container_env_var_updates>>
        ORB_SCRIPT_UPDATE_CONTAINER_DEFS: <<include(scripts/update_container_defs.py)>>
        ORB_SCRIPT_GET_TASK_DFN_VAL: <<include(scripts/get_task_dfn_val.py)>>
        ORB_STR_PROFILE_NAME: <<parameters.profile_name>>
        ORB_STR_PREVIOUS_REVISION_NUMBER: <<parameters.previous_revision_number>>
        ORB_STR_CONTAINER_SECRET_UPDATES: <<parameters.container_secret_updates>>
        ORB_STR_CONTAINER_DOCKER_LABEL_UPDATES: << parameters.container_docker_label_updates >>
  - run:
      name: Register new task definition
      command: <<include(scripts/register_new_task_def.sh)>>
      environment:
        ORB_STR_FAMILY: <<parameters.family>>
        ORB_STR_PROFILE_NAME: <<parameters.profile_name>>
