description: |
  Install AWS CLI and  a task definition from a json file.
docker:
  - image: << parameters.docker-image-for-job >>
parameters:
  docker-image-for-job:
    description: The docker image to be used for running this job on CircleCI.
    type: string
    default: 'cimg/python:3.10.4'
  aws-access-key-id:
    description: |
      AWS access key id for IAM role. Set this to the name of the environment variable you will use to hold this value, i.e. AWS_ACCESS_KEY_ID.
    type: env_var_name
    default: AWS_ACCESS_KEY_ID
  aws-secret-access-key:
    description: |
      AWS secret key for IAM role. Set this to the name of the environment variable you will use to hold this value, i.e. AWS_SECRET_ACCESS_KEY.
    type: env_var_name
    default: AWS_SECRET_ACCESS_KEY
  aws-region:
    description: AWS region to operate in. Set this to the name of the environment variable you will use to hold this value, i.e. AWS_DEFAULT_REGION.
    type: env_var_name
    default: AWS_REGION
  role-arn:
    description: |
      The Amazon Resource Name (ARN) of the role that the caller is assuming.
      Role ARN must be configured for web identity.
    type: string
    default: ""
  role-session-name:
    description: An identifier for the assumed role session
    type: string
    default: ${CIRCLE_JOB}
  session-duration:
    description: The duration of the session in seconds
    type: string
    default: "3600"
  profile-name:
    description: AWS profile name to be configured.
    type: string
    default: ''
  task-definition-json:
    description: |
      Location of your .json task definition file (relative or absolute).
    type: string
  deploy-scheduled-task:
    description: >
      Set this parameter to true to deploy updated task definition to a scheduled task rule.
    type: boolean
    default: false
  rule-name:
    description: The name of the scheduled task's rule to update. Must be a valid ECS Rule.
    type: string
steps:
  - when:
      condition: <<parameters.role-arn>>
      steps:
        - aws-cli/setup:
            role-arn: <<parameters.role-arn>>
            profile-name: <<parameters.profile-name>>
            session-duration: <<parameters.session-duration>>
            aws-region: <<parameters.aws-region>>
            role-session-name: <<parameters.role-session-name>>
  - unless:
      condition: <<parameters.role-arn>>
      steps:
        - aws-cli/setup:
            aws-access-key-id: << parameters.aws-access-key-id >>
            aws-secret-access-key: << parameters.aws-secret-access-key >>
            aws-region: << parameters.aws-region >>
            profile-name: << parameters.profile-name >>
  - update-task-definition-from-json:
      task-definition-json: << parameters.task-definition-json >>
      profile-name: << parameters.profile-name >>
  - when:
      condition: <<parameters.deploy-scheduled-task>>
      steps:
        - deploy-ecs-scheduled-task:
            rule-name: <<parameters.rule-name>>
