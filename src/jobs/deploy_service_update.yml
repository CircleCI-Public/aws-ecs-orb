description: >
  Install AWS CLI and update the ECS service with the registered task definition.

parameters:
  region:
    description: AWS region to use. Defaults to AWS_DEFAULT_REGION environment variable.
    type: string
    default: ${AWS_DEFAULT_REGION}
  profile_name:
    description: AWS profile name to be configured.
    type: string
    default: "default"
  family:
    description: Name of the task definition's family.
    type: string
  cluster:
    description: The short name or full ARN of the cluster that hosts the service.
    type: string
  service_name:
    description: >-
      The name of the service to update. If undefined, we assume `family` is the
      name of both the service and task definition.
    type: string
    default: ''
  deployment_controller:
    description: The deployment controller to use for the service. Defaulted to ECS
    type: enum
    enum:
      - ECS
      - CODE_DEPLOY
    default: ECS
  codedeploy_application_name:
    description: >
      The name of the AWS CodeDeploy application used for the deployment.

      Only effective when the deployment_controller parameter value is
      "CODE_DEPLOY".
    type: string
    default: ''
  codedeploy_deployment_group_name:
    description: >
      The name of the AWS CodeDeploy deployment group used for the deployment.

      Only effective when the deployment_controller parameter value is
      "CODE_DEPLOY".
    type: string
    default: ''
  codedeploy_load_balanced_container_name:
    description: >
      The name of the container to be load-balanced via AWS CodeDeploy.

      Only effective when the deployment_controller parameter value is
      "CODE_DEPLOY".
    type: string
    default: ''
  codedeploy_load_balanced_container_port:
    description: >
      The port of the container to be load-balanced via AWS CodeDeploy.

      Only effective when the deployment_controller parameter value is
      "CODE_DEPLOY".
    type: string
    default: "80"
  container_image_name_updates:
    description: >
      Use this to update the Docker image names and/or tag names of existing

      containers that had been defined in the previous task definition.

      Expected format:
      container=<container-name>,image-and-tag=<image-name>:<tag-name>|image=<image-name>|tag=<tag-name>,container=...,image-and-tag|image|tag=...,

      For each container, specify only either "image-and-tag" or "image" or
      "tag".

      If "image-and-tag" is specified, the container image will be updated to
      the value of the name-value pair.

      If "image" is specified, the image tag defined in the previous task
      definition will be retained, if exists.

      If "tag" is specified, the image name defined in the previous task
      definition will be used.
    type: string
    default: ''
  container_env_var_updates:
    description: >
      Use this to update or set the values of environment variables that will be
      defined for the containers.

      (Existing environment variables not included in this parameter will not be
      removed)

      Expected format:
      container=<container-name>,name=<env-var-name>,value=<env-var-value>,container=...,name=...,value=...,

      Values should not contain commas.
    type: string
    default: ''
  container_secret_updates:
    description: >
      Use this to update or set the values of secrets variables that will be
      defined for the containers.
      (Existing secrets variables not included in this parameter will not be
      removed)

      Expected format:
      container=<container-name>,name=<env-var-name>,valueFrom=<env-var-value>,container=...,name=...,valueFrom=...,

      Values should not contain commas.
    type: string
    default: ''
  container_docker_label_updates:
    description: >
      Use this to update or set the values of docker label variables that will be defined for the containers.
      (Existing secrets variables not included in this parameter will not be removed)

      Expected format:
      container=<container-name>,<key>=<env-var-name>,<key>=<env-var-value>,container=...,<key>=...,<key>=...,

      Values should not contain commas.
    type: string
    default: ''
  force_new_deployment:
    description: |
      Whether to force a new deployment of the service.
      Not applicable to ECS services that are of the Blue/Green Deployment type.
    type: boolean
    default: false
  enable_circuit_breaker:
    description: |
      Determines whether a service deployment will fail if the service canâ€™t reach a steady state.
      The deployment circuit breaker can only be used for services using the rolling update (ECS ) deployment type.
    type: boolean
    default: false
  verify_revision_is_deployed:
    description: |
      Runs the verify_revision_is_deployed Orb command to verify that
      the revision has been deployed and is the only deployed revision
      for the service. Note: enabling this may result in the build
      being marked as failed if tasks for older revisions fail to be stopped
      before the max number of polling attempts is reached.
    type: boolean
    default: false
  verification_timeout:
    description: >
      The maximum amount of time to wait for a blue/green deployment to complete
      before timing out.

      Only in use when the deployment controller is the blue/green deployment
      type.
    type: string
    default: 10m
  max_poll_attempts:
    description: >
      The maximum number of attempts to poll the deployment status before giving
      up.

      Only in use when verify_revision_is_deployed is set to true.
    type: integer
    default: 50
  poll_interval:
    description: |
      The polling interval, in seconds.
      Only in use when verify_revision_is_deployed is set to true.
    type: integer
    default: 20
  fail_on_verification_timeout:
    description: |
      Whether to exit with an error if the verification of the deployment
      status does not complete within the number of polling attempts.
      Only in use when verify_revision_is_deployed is set to true.
    type: boolean
    default: true
  skip_task_definition_registration:
    description: |
      Whether to skip registration of a new task definition.
    type: boolean
    default: false
  task_definition_tags:
    description: >
      The metadata that you apply to the task definition to help you categorize and organize them.
      Each tag consists of a key and an optional value, both of which you define.

      (Existing environment variables not included in this parameter will not be removed)

      Expected formats:
        - Shorthand Syntax
          key=string,value=string ...
        - JSON Syntax
         [{"key": "string","value": "string"} ... ]

      Values should not contain commas.
    type: string
    default: ''
  codedeploy_capacity_provider_name:
    description: >
      The name of AWS Capacity Provider to be added to CodeDeploy deployment.
      Must be used with capacity-provider-base and capacity-provider-weight.
    type: string
    default: ''
  codedeploy_capacity_provider_base:
    description: >
      The base of AWS Capacity Provider to be added to CodeDeploy deployment.
      Must be used with codedeploy_capacity_provider_name and capacity-provider-weight.
    type: string
    default: ''
  codedeploy_capacity_provider_weight:
    description: >
      The base of AWS Capacity Provider to be added to CodeDeploy deployment.
      Must be used with codedeploy_capacity_provider_name and capacity-provider-base.
    type: string
    default: ''
  deployment_config_name:
    description: >
      The name of a CODE DEPLOY deployment configuration associated with the IAM user or AWS account.
      If not specified, the value configured in the deployment group is used as the default.
    type: string
    default: ''
  auth:
    description: |
      The authentication method used to access your AWS account. Import the aws-cli orb in your config and
      provide the aws-cli/setup command to authenticate with your preferred method. View examples for more information.
    type: steps
  executor:
    description: The executor to use for this job. By default, this will use the "default" executor provided by this orb.
    type: executor
    default: default
executor: << parameters.executor >>
steps:
  - steps: << parameters.auth >>
  - update_service:
      family: << parameters.family >>
      cluster: << parameters.cluster >>
      service_name: << parameters.service_name >>
      deployment_controller: << parameters.deployment_controller >>
      enable_circuit_breaker: << parameters.enable_circuit_breaker >>
      codedeploy_application_name: << parameters.codedeploy_application_name >>
      codedeploy_deployment_group_name: << parameters.codedeploy_deployment_group_name >>
      codedeploy_load_balanced_container_name: << parameters.codedeploy_load_balanced_container_name >>
      codedeploy_load_balanced_container_port: << parameters.codedeploy_load_balanced_container_port >>
      container_image_name_updates: << parameters.container_image_name_updates >>
      container_env_var_updates: << parameters.container_env_var_updates >>
      container_secret_updates: << parameters.container_secret_updates >>
      container_docker_label_updates: << parameters.container_docker_label_updates >>
      force_new_deployment: << parameters.force_new_deployment >>
      verify_revision_is_deployed: << parameters.verify_revision_is_deployed >>
      max_poll_attempts: << parameters.max_poll_attempts >>
      poll_interval: << parameters.poll_interval >>
      region: << parameters.region >>
      fail_on_verification_timeout: << parameters.fail_on_verification_timeout >>
      skip_task_definition_registration: << parameters.skip_task_definition_registration >>
      task_definition_tags: << parameters.task_definition_tags >>
      verification_timeout: << parameters.verification_timeout >>
      profile_name: << parameters.profile_name >>
      codedeploy_capacity_provider_name: <<parameters.codedeploy_capacity_provider_name>>
      codedeploy_capacity_provider_weight: <<parameters.codedeploy_capacity_provider_weight>>
      codedeploy_capacity_provider_base: <<parameters.codedeploy_capacity_provider_base>>
      deployment_config_name: <<parameters.deployment_config_name>>
